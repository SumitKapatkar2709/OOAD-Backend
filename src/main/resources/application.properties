spring.application.name=bitscure
# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/bitscure
spring.datasource.username=postgres
spring.datasource.password=Sumit@27
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Connection Pooling (Optional)
spring.datasource.initialization-mode=always
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=2000000
spring.datasource.hikari.connection-timeout=30000

# Logging SQL queries (Optional)
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.mvc.static-path-pattern=/**
spring.resources.static-locations=classpath:/static/




# OAuth2 Configuration for Google
#spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=openid, profile, email
#
## Set the client authentication method to 'client_secret_post'
#spring.security.oauth2.client.registration.google.client-authentication-method=post
#
## OAuth2 Provider URLs
#spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
#spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub


# --- Custom OAuth2 Settings (Optional) ---
#spring.security.oauth2.client.registration.google.client-authentication-method=post
#spring.security.oauth2.client.registration.google.client-name=Google

# --- Session Management ---
#server.servlet.session.timeout=30m

# --- Logging Configuration (Optional) ---
logging.level.org.springframework.security=DEBUG

# Ensure cookies are managed correctly
#server.servlet.session.cookie.secure=false
#server.servlet.session.cookie.same-site=lax



